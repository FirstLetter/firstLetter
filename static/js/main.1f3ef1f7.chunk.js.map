{"version":3,"sources":["apiroutes.js","components/useFetchAsync.js","components/withAuth.js","cconfig.js","components/SignInAttempt/SiginAttempt.js","components/Navigation/Navigation.js","components/HowTo.js","components/Home/Home.js","components/useToastMessage.js","components/utils/Toast.js","components/Content/Content.js","components/Explore/Explore.js","components/Letter/Letter.js","components/HowToContainer.js","routes.js","components/NotFound/NotFoundPage.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js","context.js","assets/images/Hacktoberfest_19.png","logo.svg","utils.js","components/utils/Loader.js"],"names":["UriBuilder","scheme","domain","appendables","join","SCHEME","BASE_URL","PRIME_USER","PRIME_REPO","REPOS","GitConst","CreateFork","GetUserFork","CreateNewFile","GetPullForRepo","CreatePullRequest","GetReadme","GetAllFiles","GetFile","GithubApiInfo","method","RequestMethods","POST","GET","PUT","GithubApiRoutes","username","repo","filename","fetchAsync","url","data","config","a","result","Axios","get","post","put","Error","CONST_ERROR_NOT_FOUND","useGitFetchAsync","apiConst","d","body","defLoad","useState","loading","setLoading","setData","error","setError","handleRun","uri","console","log","useEffect","AuthComponent","CONST_SCOPES","BACKEND_URL","process","END_POINT","SigninAttempt","useLoginContext","loggedIn","login","user","found","setFound","navigate","handleLogin","github_username","user_auth_token","className","onClick","InLink","props","isActive","children","OutLink","_Navigation","path","usePath","logout","href","trim","Navigation","src","HacktoberImage","alt","Howto","style","wordWrap","listStylePosition","MyFiles","lazy","Home","fallback","height","borderRadius","width","backgroundColor","fromFork","useToastMessage","defShow","showing","setShowing","timer","setTimeout","clearTimeout","Toast","text","zIndex","EditorContent","deftitle","deftext","onSelectNew","istitleDisabled","sha","title","setTitle","setText","message","commiter","name","email","useremail","content","btoa","headers","Authorization","authtoken","type","placeholder","value","onChange","e","target","required","disabled","borderBottom","rows","source","TabsList","MyPulls","Editor","MyForks","MyPullRequests","shouldShow","setShouldShow","head","base","MyFork","onSelect","MyEditor","EditorToRender","currentSelected","undefined","atob","TabOutlook","TabsManager","tabsList","currentTab","map","item","index","key","Content","ToRender","setCurrentTab","setCurrentSelected","AddNew","Explore","Letter","toRender","lettername","split","HowToContainer","routes","NotFoundPage","Footer","class","App","useRedirect","routeResult","useRoutes","Boolean","window","location","hostname","match","ReactDOM","render","Provider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","ACTIONS","initialState","reducer","state","action","createUseContext","useReducer","dispatch","setUserDetails","user_details","module","exports","LoadingComponent"],"mappings":"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","file":"static/js/main.1f3ef1f7.chunk.js","sourcesContent":["import Axios, {axios} from 'axios'\r\nimport { RequestMethods, CONST_ERROR_NOT_FOUND } from './utils'\r\n\r\nexport const UriBuilder = ({scheme, domain, appendables}) => {\r\n    return [[scheme, domain].join(\"://\"), appendables.join(\"/\")].join('/')\r\n}\r\n\r\nexport const SCHEME = 'https' \r\nexport const BASE_URL = 'api.github.com'\r\nexport const PRIME_USER = \"firstLetter\"\r\nexport const PRIME_REPO = \"firstLetterPosts\"\r\nexport const REPOS = 'repos'\r\nexport const FORKS = 'forks'\r\nexport const PULLS = 'pulls'\r\nexport const README = 'readme'\r\nexport const CONTENTS = 'contents'\r\n\r\nexport const GitConst = {\r\n    CreateFork: 'createFork',\r\n    GetUserFork: 'getUserFork',\r\n    CreateNewFile: 'createNewFile',\r\n    GetPullForRepo: 'getPullForRepo',\r\n    CreatePullRequest: 'createPullRequest',\r\n    GetReadme: 'getReadme',\r\n    GetAllFiles: 'getAllFiles',\r\n    GetFile: 'getFile'\r\n}\r\n\r\nexport const GithubApiInfo = {\r\n    [GitConst.CreateFork]: {method: RequestMethods.POST},\r\n    [GitConst.GetUserFork]: {method: RequestMethods.GET},\r\n    [GitConst.CreateNewFile]: {method: RequestMethods.PUT},\r\n    [GitConst.GetPullForRepo]: {method: RequestMethods.GET},\r\n    [GitConst.CreatePullRequest]: {method: RequestMethods.POST},\r\n    [GitConst.GetReadme]: {method: RequestMethods.GET},\r\n    [GitConst.GetAllFiles]: {method: RequestMethods.GET},\r\n    [GitConst.GetFile]: {method: RequestMethods.GET},\r\n}\r\n\r\nexport const GithubApiRoutes = {\r\n    [GitConst.CreateFork]: ({username, repo}) => [REPOS, username, repo, FORKS],\r\n    [GitConst.GetUserFork]: ({username, repo}) => [REPOS, username, repo],\r\n    [GitConst.CreateNewFile]: ({username, repo, filename}) => [REPOS, username, repo, CONTENTS, filename],\r\n    [GitConst.GetPullForRepo]: ({username, repo}) => [REPOS, username, repo, PULLS],\r\n    [GitConst.CreatePullRequest]: ({username, repo}) => [REPOS, username, repo, PULLS],\r\n    [GitConst.GetReadme]: ({username, repo}) => [REPOS, username, repo, CONTENTS, username, README],\r\n    [GitConst.GetAllFiles]: ({username, repo, filename}) => [REPOS, username, repo, CONTENTS, filename],\r\n    [GitConst.GetFile]: ({username, repo, filename}) => [REPOS, username, repo, CONTENTS , filename],\r\n}\r\n\r\nexport const fetchAsync = async (url, method, data, config) => {\r\n    let result = null\r\n    switch(method){\r\n        case RequestMethods.GET:\r\n            result = await Axios.get(url, config) \r\n            break\r\n        case RequestMethods.POST:\r\n            result = await Axios.post(url, data, config)\r\n            break\r\n        case RequestMethods.PUT:\r\n            result = await Axios.put(url, data, config)\r\n            break\r\n        default:\r\n            throw Error(CONST_ERROR_NOT_FOUND)\r\n    }\r\n    return result\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport { fetchAsync, UriBuilder, SCHEME, BASE_URL, GithubApiRoutes, GithubApiInfo } from 'apiroutes'\r\n\r\nexport const useGitFetchAsync = (apiConst, d, body = null, config=null, defLoad=true) => {\r\n    const [loading, setLoading] = useState(defLoad)\r\n    const [data, setData] = useState(null)\r\n    const [error, setError] = useState(null)\r\n    const [statusCode, setStatusCode] = useState(-1)\r\n\r\n    const handleRun = async () => {\r\n        const uri = UriBuilder({\r\n            scheme: SCHEME,\r\n            domain: BASE_URL,\r\n            appendables: GithubApiRoutes[apiConst](d)\r\n        })\r\n\r\n        console.log(uri)\r\n    \r\n        const {method} = GithubApiInfo[apiConst]\r\n        try {\r\n            const result = await fetchAsync(uri, method, body, config)\r\n            if(result.data === null) {\r\n                setError(\"error\")\r\n            } else {\r\n                setData(result.data)\r\n            }\r\n            setLoading(false)\r\n        } catch (error) {\r\n            console.log(\"..Error <-> Error..\")\r\n            setError(error)\r\n            setData(null)\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(loading === true) {\r\n            handleRun()\r\n        }\r\n    }, [loading])\r\n\r\n    \r\n    return {\r\n        loading,\r\n        error,\r\n        data,\r\n        setLoading\r\n    }\r\n}","import React from 'react'\r\nimport { useLoginContext } from 'context'\r\nimport { Home } from './Home/Home'\r\nimport {navigate} from 'hookrouter'\r\n \r\nexport const withAuth = (AuthComponent) => {\r\n\r\n    return (props) => {\r\n        const {loggedIn} = useLoginContext()\r\n\r\n        if(loggedIn === true){\r\n            return <AuthComponent {...props} />\r\n        } else {\r\n            navigate('/home', true)\r\n            return <Home />\r\n        }\r\n    }\r\n}","// export const BACKEND_URL = process.env.BACKEND_URL\r\n// export const END_POINT = process.env.END_POINT\r\nexport const CONST_QUERY = (username) => `\r\nquery {\r\n    githubUser(github_username: \"${username}\") {\r\n        github_username\r\n        user_auth_token\r\n    }\r\n}`.trim()\r\n\r\nconst DEBUG = \"debug\"\r\nconst PROD = 'production'\r\nconst MODE=process.env.REACT_APP_MODE\r\nexport const CONST_SCOPES = ['repo', 'user'].join(\",\")\r\nexport const BACKEND_URL= MODE === PROD ? process.env.REACT_APP_PROD_BACKEND_URL : process.env.REACT_APP_DEBUG_BACKEND_URL //'https://gitobackend.herokuapp.com'\r\nexport const END_POINT=process.env.REACT_APP_ROOT_END_POINT //'graphql'\r\nconst CLIENT_ID=MODE === PROD ? process.env.REACT_APP_PROD_CLIENT_ID : process.env.REACT_APP_DEBUG_CLIENT_ID //'1d4d5827024e4edfbe69'\r\nexport const BASE_URL_AUTH=process.env.REACT_APP_BASE_URL_AUTH // 'https://github.com/login/oauth/authorize'\r\n\r\nexport const MAKE_GIT_AUTH_URL = () => {\r\n    const str= `${BASE_URL_AUTH}?client_id=${CLIENT_ID}&scope=${CONST_SCOPES}`.trim()\r\n    return str\r\n} ","import React, {useState, useEffect} from 'react'\r\nimport { useLoginContext } from 'context'\r\nimport {BACKEND_URL, END_POINT, CONST_QUERY} from 'cconfig'\r\nimport { fetchAsync } from 'apiroutes'\r\nimport { RequestMethods } from 'utils'\r\nimport { navigate } from 'hookrouter'\r\nimport { LoadingComponent } from 'components/utils/Loader'\r\nimport 'assets/css/theme.css'\r\n\r\nexport const SigninAttempt = ({username}) => {\r\n\r\n    const {loggedIn, login, user} = useLoginContext()\r\n    const [loading, setLoading] = useState(true)\r\n    const [data, setData] = useState(null)\r\n    const [found, setFound] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if(loading === true){\r\n            if(loggedIn === true) {\r\n                navigate('/home')\r\n            } else {\r\n                handleLogin()\r\n            }\r\n        } else if(loading === false) {\r\n            if(data != null) {\r\n                setFound(true)\r\n                login(data)\r\n                navigate('/home')\r\n            }\r\n        }\r\n    }, [loading])\r\n\r\n    const handleLogin = async () => {\r\n        const url = [BACKEND_URL, END_POINT].join('/')\r\n        // console.log(url)\r\n        // const info = await fetchAsync(url, RequestMethods.POST, {query: CONST_QUERY(username)})\r\n        // setData(info.data.data.githubUser)\r\n        setData({\r\n            github_username: \"vermakartik\",\r\n            user_auth_token: \"cdf08b1ceae32b356a7b34084aed9be54e0b53ee\" \r\n            // user_auth_token: \"cdf08b1ceae32b356a7b34084aed9be54e0b53ef\" \r\n        })\r\n        // console.log(\"from handle login...\")\r\n        // console.log(info.data)       \r\n        setLoading(false)\r\n    }\r\n\r\n    return <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n            <div className=\"col-12 text-center py-5\">\r\n            {\r\n                loading ? \r\n                <div className=\"app-text-blue-light font-ibm-plex-mono font-size-20\">\r\n                    <LoadingComponent />\r\n                    <div>\r\n                        Signing you in \r\n                    </div>\r\n                    <div>\r\n                        Stay With Us\r\n                    </div>\r\n                </div> :\r\n                (\r\n                    !found ? \r\n                    <div className=\"app-bg-main\"><button className=\"app-text-background app-bg-blue-light-hover app-bg-indigo border-0 px-3 py-2 rounded-sm font-ibm-plex-mono font-weight-500\" onClick={() => setLoading(true)}>Retry</button></div> :\r\n                    <div className=\"app-bg-main\">Already Logged In</div>\r\n                    \r\n                )\r\n            }\r\n        </div>\r\n        </div>\r\n    </div>\r\n}","import React from 'react'\r\nimport {A, navigate, usePath} from 'hookrouter'\r\nimport { useLoginContext } from 'context'\r\nimport { MAKE_GIT_AUTH_URL } from 'cconfig'\r\nimport 'components/Navigation/navigation.css'\r\nimport 'assets/css/theme.css'\r\nimport HacktoberImage from 'assets/images/Hacktoberfest_19.png'\r\nimport 'assets/fontawesome-free-5.11.2-web/css/brands.min.css'\r\n\r\nexport const InLink = (props) => <span className={`px-1 px-md-2`}><A className={`link ${props.isActive === true ? \"active-tab\": \"\"}`}  {...props}>{props.children}</A></span>\r\nexport const OutLink = (props) => <span className=\"px-1 px-md-2\"><a className=\"link\" {...props}>{props.children}</a></span>\r\n\r\nconst _Navigation = () => {\r\n    const path = usePath()\r\n    console.log(path)\r\n    const {loggedIn, logout} = useLoginContext()\r\n\r\n    const handleLogout = () => {\r\n        logout()\r\n        navigate('/home', true)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <InLink href='/home' isActive={path == '/home'}>Home</InLink>\r\n            <InLink href='/explore' isActive={path == '/explore'}>Exlpore</InLink>\r\n            {loggedIn === false ? <OutLink href={MAKE_GIT_AUTH_URL()} >Github <i className=\"fab fa-github\"></i> Log In</OutLink>: null}\r\n            {/* {loggedIn === false ? <InLink href={'/user/signin/vermakartik'} >Github <i className=\"fab fa-github\"></i> Log In</InLink>: null} */}\r\n            {loggedIn === true ? <InLink isActive={path==\"/content\"} href='/content'>Content</InLink> : null}\r\n            {loggedIn === true ? <InLink href=\"#\" onClick={handleLogout}>Logout</InLink>: null}\r\n        </>\r\n    )\r\n}\r\n\r\nexport const Navigation = () => {\r\n    return (\r\n        <div className=\"row py-2\">\r\n            <div className=\"col-12 col-md-6 pl-2 pt-4\">\r\n                {/* <div className=\"hacktober-image\"></div> */}\r\n                <img className=\"hacktober-image\" src={HacktoberImage} alt=\"hacktober\" />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 pt-5 pr-md-5 pr-0 text-md-right\">\r\n                <_Navigation />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const Howto = () => {\r\n    return <div className=\"container\">\r\n            <div className=\"row\">\r\n            <div className=\"col-12 rounded py-2 font-ibm-plex-mono font-size-18 text-light app-text-main w-100\" style={{wordWrap: \"break-word\"}}>\r\n                <h1 className=\"app-text-white\">Introduction</h1>\r\n                <p className=\"app-text-gray\">Hi, I am <a className=\"text-decoration-none app-text-bg-accent app-text-blue-light-hover\" href=\"https://vermakartik.github.io\">Kartik Verma</a>. I am a web developer and an android developer. </p>\r\n                <p className=\"app-text-gray\">\r\n                    This is my contribution towards the Hacktober fest. I am providing an easy way for techies as well as non-techies to contribute to open source. Open source is not just about writing code. When you share your knowledge <strong>openly</strong> then I consider it open source development. \r\n                </p>\r\n                <br />\r\n                <h1 className=\"app-text-white\">How to?</h1>\r\n                <p className=\"app-text-gray\">\r\n                    A simple three Step Process to win a free <b>Hacktober T-shirt</b> this October:\r\n                    <ul style={{listStylePosition: \"inside\"}}>\r\n                        <li>Create your <a className=\"text-decoration-none app-text-bg-accent app-text-blue-light-hover\" href=\"https://github.com/\">Github</a> account. </li>\r\n                        <li>Register on <a className=\"text-decoration-none app-text-bg-accent app-text-blue-light-hover\" href=\"https://https://hacktoberfest.digitalocean.com/\">hacktoberfest website</a> to track your pull requests.</li>\r\n                        <li>Sign In to First Letter with your github account. And Share your knowledge about programming or any personal experiences that you would like to share using <a  className=\"text-decoration-none app-text-bg-accent app-text-blue-light-hover\" href=\"https://guides.github.com/features/mastering-markdown/\">markdown</a></li>\r\n                    </ul>\r\n                </p>\r\n                <p className=\"app-text-gray\">\r\n                    You have to make at least <strong>4 pull requests</strong>. To keep things simple please keep it <strong>One at a time. </strong> \r\n                    i.e. create a file then send the pull request, and wait for your merge. To see details about your pull requests visit the link https://github.com/&lt;your-github-username&gt;. \r\n                </p>\r\n                <br />\r\n                <h1 className=\"app-text-white\">Why this project</h1>\r\n                <p className=\"app-text-gray\">\r\n                    As the world is moving fast paced towards the era of Artificial Intelligence, Virtual Reality/ Augumented Reality where the programming becomes too much complex to write, I believe that the traditional ways of doing development will not be able to cope up with it. \r\n                </p>\r\n                <p className=\"app-text-gray\">\r\n                    Here I am trying to support GUI based programming, where as a developer, I will be able to focus on solving the main problem and not just write tons of code again and again.\r\n                </p>\r\n                <p className=\"app-text-gray\">\r\n                    Here, by making this project, I am trying to make a small contribution towards the GUI based development by allowing people to make commits, and pull requests easily, without going to command line.\r\n                </p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n","import React, {lazy, Suspense} from 'react'\r\nimport { Navigation } from 'components/Navigation/Navigation'\r\nimport {navigate} from 'hookrouter'\r\nimport { LoadingComponent } from 'components/utils/Loader'\r\nimport 'components/Home/home.css'\r\nimport 'assets/css/theme.css'\r\nimport { useLoginContext } from 'context'\r\nimport { Howto } from 'components/HowTo'\r\nconst MyFiles = lazy(() => import('components/MyPulls/MyPulls'))\r\n\r\nexport const Home = () => {\r\n\r\n    const {user, loggedIn} = useLoginContext()\r\n\r\n    return(        \r\n        <div className=\"container-fluid app-bg-main\">\r\n            <Navigation />\r\n            {\r\n                loggedIn === false ?\r\n                <Howto /> :\r\n                <> \r\n                    <Suspense fallback={<div className=\"font-space-mono\">Loading your pulls <LoadingComponent /> </div>}>\r\n                        <MyFiles onClick={(data) => {\r\n                            navigate(`/letter/${data.path}`)\r\n                        }}/>\r\n                    </Suspense>\r\n                    <div style={{height: \"1px\", borderRadius: \"4px\", width: \"100%\", backgroundColor: 'var(--backgroundLight)'}} className=\"my-4\"></div>\r\n                    <Suspense fallback={<div className=\"font-space-mono\">Loading your pulls <LoadingComponent /> </div>}>\r\n                        <MyFiles fromFork={true} onClick={(data) => {\r\n                            navigate(`/letter/${data.path}`)\r\n                        }}/>\r\n                    </Suspense>\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}","import React, {useState, useEffect} from 'react'\r\nimport 'assets/css/global.css'\r\n\r\nconst MAX_TIME = 2000\r\n\r\nexport const useToastMessage = (defShow = false) => {\r\n    const [showing, setShowing] = useState(defShow)\r\n\r\n    useEffect(() => {\r\n        if(showing === true){\r\n            const timer = setTimeout(() => {\r\n                setShowing(false);\r\n            }, MAX_TIME)\r\n            return () => clearTimeout(timer)\r\n        }\r\n    },[showing])\r\n\r\n    return {\r\n        showing,\r\n        setShowing\r\n    }\r\n}","import React from 'react'\r\nimport 'assets/css/global.css'\r\nimport 'assets/css/theme.css'\r\n\r\nexport const Toast = ({text}) => (\r\n    <div style={{zIndex: 100}} className=\"d-inline-block toast-message app-bg-color-gray app-text-background font-size-14 px-2 py-1 font-roboto-mono\">\r\n        {text}\r\n    </div>\r\n)\r\n","import React, {useState, useEffect, lazy, Suspense} from 'react'\r\nimport { withAuth } from 'components/withAuth'\r\nimport { Navigation } from 'components/Navigation/Navigation'\r\nimport 'components/Content/content.css'\r\nimport 'assets/css/theme.css'\r\nimport ReactMarkdown from \"react-markdown\"\r\nimport { useGitFetchAsync } from 'components/useFetchAsync'\r\nimport { GitConst, PRIME_REPO, PRIME_USER } from 'apiroutes'\r\nimport { useLoginContext } from 'context'\r\nimport { LoadingComponent } from 'components/utils/Loader'\r\nimport { useToastMessage } from 'components/useToastMessage'\r\nimport {Toast} from 'components/utils/Toast' \r\nconst MyFiles = lazy(() => import('components/MyPulls/MyPulls'))\r\n\r\n\r\nconst EditorContent = ({deftitle = \"\", deftext = \"\", onSelectNew = null, istitleDisabled = false, sha=null}) => {\r\n\r\n    const {user} = useLoginContext()\r\n    const [title, setTitle] = useState(deftitle)\r\n    const [text, setText] = useState(deftext)\r\n    const {showing, setShowing} = useToastMessage()\r\n\r\n    useEffect(() => {\r\n        setText(deftext)\r\n        setTitle(deftitle)\r\n    }, [deftext, deftitle])\r\n\r\n    const {loading, data, error, setLoading} = useGitFetchAsync(\r\n        GitConst.CreateNewFile,\r\n        {\r\n            username: user.username,\r\n            repo: PRIME_REPO,\r\n            filename: `${user.username}/${title}`\r\n        },\r\n        {\r\n            message: \"fileupdated\",\r\n            commiter: {\r\n                name: user.username,\r\n                email: user.useremail === \"\" || user.useremail ? `${user.username}@github.com` : user.useremail \r\n            },\r\n            content: btoa(text),\r\n            sha: (sha === null ? \"\" : sha) \r\n        },\r\n        {\r\n            headers: {\r\n                Authorization: `bearer ${user.authtoken}`\r\n            }\r\n        },\r\n        false\r\n    )\r\n\r\n    const handleClickSave = () => {\r\n      if(title === \"\" || text === \"\") {\r\n          setShowing(true)\r\n          return\r\n      }  else {\r\n          setLoading(true)\r\n      }\r\n    } \r\n\r\n    return (\r\n        <div className=\"container-fluid app-bg-main w-100 shadow-lg\">\r\n            {showing ? <Toast text=\"Make sure Title and content are not empty\"/> : null}\r\n            <div className=\"app-bg-main\">\r\n                <div className=\"row px-1\">\r\n                    <div className=\"col-12 px-0\">\r\n                        <button className=\"px-3 py-2 font-weight-500 font-ibm-plex-mono app-bg-blue-light-hover border-0 app-text-bg-main-hover app-bg-indigo rounded-sm\" onClick={handleClickSave}>\r\n                            Save {loading === true ? <LoadingComponent /> : \"\" } \r\n                        </button>\r\n                        {onSelectNew ? <button className=\"ml-1 px-3 py-2 font-weight-500 font-ibm-plex-mono app-bg-blue-light-hover border-0 app-text-bg-main-hover app-bg-indigo rounded-sm\" onClick={() => onSelectNew()}>Add New +</button>: \"\"}\r\n                    </div>\r\n                    <div className=\"col-12 px-0 app-text-bg-accent font-size-14 font-ibm-plex-mono\">\r\n                        Please don't forget to save your content by clicking on the save button.\r\n                    </div>\r\n                </div>\r\n                <div className=\"row app-bg-light rounded-sm overflow-hidden\">\r\n                    <div className=\"col-12 px-0 border-title\">\r\n                        <input className=\"outline-none border-0 w-100 font-italic py-2 app-bg-light font-ibm-plex-mono font-weight-500 app-text-bg-accent px-2 border-bottom\" type={text} placeholder=\"Enter title...\" value={title} onChange={e => setTitle(e.target.value)} required disabled={istitleDisabled}/>\r\n                    </div>\r\n                    <div className=\"col-md-6 col-12 border-content px-0\">\r\n                        <div className=\"px-2\"><div className=\"font-size-18 py-2 font-ibm-plex-mono app-text-blue-light\" style={{borderBottom: \"2px solid var(--color-blue-light)\"}}>Enter Content Here...</div></div>\r\n                        <div className=\"px-2 pt-1\">\r\n                            <textarea required rows=\"25\" className=\"edit-text-content w-100 border-0 app-bg-light app-text-gray-light font-roboto-mono\" value={text} onChange={(e) => setText(e.target.value)}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 col-12 px-0\">\r\n                        <div className=\"px-2\"><div className=\"font-size-18 font-ibm-plex-mono app-text-blue-light py-2 px-2\" style={{borderBottom: \"2px solid var(--color-blue-light)\"}}>Output</div></div>\r\n                        <div className=\"px-2 pt-1 output-article-content-editor\">\r\n                            <ReactMarkdown source={text} className=\"font-roboto-mono app-text-gray-light\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst TabsList = {\r\n    MyPulls: \"My Pulls\",\r\n    Editor: \"Editor\",\r\n    MyForks: \"My Forks\"\r\n}\r\n\r\nconst Pulls = () => {\r\n    const {user} = useLoginContext()\r\n    const {loading, data, error} = useGitFetchAsync(\r\n        GitConst.GetPullForRepo,\r\n        {\r\n            username: user.username,\r\n            repo: PRIME_REPO\r\n        },\r\n        null,\r\n        {\r\n            headers: {\r\n                Authorization: `bearer ${user.authtoken}`\r\n            }\r\n        }\r\n    )\r\n\r\n    let toRender\r\n    if(loading === true){\r\n        toRender = <LoadingComponent />\r\n    } else if(error) {\r\n        toRender = <div className=\"app-text-bg-accent font-space-mono font-size-18\">Error Loading your Pulls</div>\r\n    } else if(data !== null) {\r\n        toRender = <div className=\"app-text-bg-accent font-space-mono font-size-18\">Loaded your Pulls</div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-12\">\r\n                {toRender}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst MyPullRequests = () => {\r\n\r\n    const {user} = useLoginContext()\r\n    const  {showing, setShowing} = useToastMessage()\r\n    const [shouldShow, setShouldShow] = useState(false)\r\n\r\n    const {data, loading, error, setLoading} = useGitFetchAsync(\r\n        GitConst.CreatePullRequest,\r\n        {\r\n            username: PRIME_USER,\r\n            repo: PRIME_REPO\r\n        },\r\n        {\r\n            title: `Added New from ${user.username}`,\r\n            body: `Added New articles from ${user.username}`,\r\n            head: `${user.username}:master`,\r\n            base: `master`\r\n        },\r\n        {\r\n            headers: {\r\n                Authorization: `bearer ${user.authtoken}`\r\n            }\r\n        },\r\n        false\r\n    )\r\n\r\n    useEffect(() => {\r\n        if(shouldShow === true){\r\n            setShouldShow(false)\r\n            setShowing(true)\r\n        }\r\n    }, [loading])\r\n\r\n    const handleClick = () => {\r\n        setLoading(true)\r\n        setShouldShow(true)\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"container-fluid app-bg-main\">\r\n            {\r\n                showing === true && loading === false ? (\r\n                    error ? <Toast text=\"Error Processing request\"/> : <Toast text=\"Pull Request Sent!\"/>\r\n                ) : \"\"\r\n            }\r\n            <div className=\"row px-0\">\r\n                <div className=\"col-12\">\r\n                    <button className=\"px-3 py-2 font-weight-500 font-ibm-plex-mono app-bg-blue-light-hover border-0 app-text-bg-main-hover app-bg-indigo rounded-sm\" onClick={handleClick}>\r\n                        + Create a New Pull {loading ? <LoadingComponent /> : \"\"}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst MyFork = ({onSelect}) => {\r\n    \r\n    return (\r\n        <Suspense fallback={\r\n            <div className=\"font-size-20 text-center font-space-mono app-text-bg-accent\">\r\n            <span>Loading Files From Your Repo</span> <LoadingComponent />\r\n            </div>\r\n        }>\r\n            <MyFiles fromFork={true} onClick={(data) => onSelect(data)} /> \r\n        </Suspense>\r\n    )\r\n}\r\n\r\nconst MyEditor = ({currentSelected, onSelectNew}) => {\r\n\r\n    // console.log(currentSelected)\r\n    \r\n    const {user} = useLoginContext()\r\n    const {loading, data, error} = useGitFetchAsync(\r\n        GitConst.GetFile,\r\n        {\r\n            username: user.username,\r\n            repo: PRIME_REPO,\r\n            filename: [user.username, (currentSelected ? currentSelected.name : \"readme.md\")].join('/')   \r\n        },\r\n        null,\r\n        null,\r\n        (currentSelected ? true : false)\r\n    )\r\n     \r\n    let EditorToRender\r\n\r\n    if(currentSelected === null || currentSelected === undefined){\r\n        EditorToRender = <EditorContent />\r\n    } else {\r\n        if(loading === true) {\r\n            EditorToRender = <LoadingComponent />\r\n        } else if(loading === false && error !== null) {\r\n            EditorToRender = <div className=\"app-text-accent font-face-space-mono font-size-20\">Error Loading Data...</div>\r\n        } else if(loading === false && data !== null) {\r\n            EditorToRender = <EditorContent onSelectNew={() => onSelectNew()} deftitle={data.name} deftext={atob(data.content)} istitleDisabled={true} sha={data.sha} />\r\n        }\r\n    }\r\n\r\n    console.log(EditorToRender)\r\n\r\n    return (\r\n        <div className=\"container-fluid app-bg-main\">\r\n            {EditorToRender}\r\n        </div>\r\n    ) \r\n}\r\n\r\nconst TabOutlook = ({text, isActive, onClick}) => {\r\n    return (\r\n        <div onClick={onClick} className={`d-inline-block col-md-1 text-center col-12 tab-outlook px-2 py-1 ${isActive === true ? \"tab-outlook-is-active\" : \"\"}`}>\r\n            {text}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst TabsManager = ({tabsList, currentTab, onClick}) => {\r\n    \r\n    return (\r\n        <div className=\"tab-manager\">\r\n            {tabsList.map((item, index) => {\r\n                return <TabOutlook key={index} text={item} isActive={currentTab === item} onClick={() => onClick(item)}/>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Content = withAuth(() => {\r\n\r\n    const [currentTab, setCurrentTab] = useState(TabsList.MyForks)\r\n    const [currentSelected, setCurrentSelected] = useState(null)\r\n\r\n    console.log(currentSelected)\r\n    \r\n    let ToRender\r\n    if(currentTab === TabsList.MyForks) {\r\n        ToRender = <MyFork onSelect={(data) => {\r\n            setCurrentSelected(data)\r\n            setCurrentTab(TabsList.Editor)\r\n        }}/>\r\n    } else if (currentTab === TabsList.Editor){\r\n        ToRender = <MyEditor currentSelected={currentSelected} onSelectNew={() => setCurrentSelected(null)} />\r\n    } else if(currentTab === TabsList.MyPulls) {\r\n        ToRender = <MyPullRequests />\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid app-bg-main\">\r\n            <Navigation />    \r\n            <TabsManager \r\n                tabsList={\r\n                    [TabsList.MyForks, TabsList.Editor, TabsList.MyPulls, TabsList.AddNew]} \r\n                    currentTab={currentTab} \r\n                    onClick={(item) => setCurrentTab(item)}/>\r\n            <br />\r\n            {ToRender}\r\n        </div>\r\n    )\r\n\r\n})","import React from 'react'\r\nimport { useGitFetchAsync } from 'components/useFetchAsync'\r\nimport { Navigation } from 'components/Navigation/Navigation'\r\n\r\nexport const Explore = () => {\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <Navigation />\r\n            <div className=\"py-3 app-text-gray-light font-ibm-plex-mono font-size-18\">\r\n                Coming Soon... Currenlty in development phase :-)\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useGitFetchAsync } from 'components/useFetchAsync'\r\nimport {navigate} from 'hookrouter'\r\nimport { GitConst, PRIME_REPO, PRIME_USER } from 'apiroutes'\r\nimport { Navigation } from 'components/Navigation/Navigation'\r\nimport 'assets/css/theme.css'\r\nimport { LoadingComponent } from 'components/utils/Loader'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport { useLoginContext } from 'context'\r\n\r\nexport const Letter = ({lettername, username}) => {\r\n\r\n    const {loggedIn, user} = useLoginContext()\r\n    \r\n    const {loading, data, error} = useGitFetchAsync(\r\n        GitConst.GetFile, \r\n        {\r\n            username: PRIME_USER,\r\n            repo: PRIME_REPO,\r\n            filename: `${username}/${lettername}`\r\n        },\r\n        null,\r\n        null\r\n    )\r\n\r\n    console.log(username)\r\n    console.log(lettername)\r\n    console.log(data)\r\n\r\n    let toRender\r\n    if(loading === true) {\r\n        toRender = <div className=\"px-2 font-ibm-plex-mono font-size-18 app-text-blue-light\">Fetching Letter <LoadingComponent /></div>\r\n    } else if(data !== null) {\r\n        toRender = (\r\n            <>\r\n            <h1 style={{backgroundColor: \"#bdbdbd0f\"}} className=\"font-ibm-plex-mono px-2 app-text-blue-light-light pb-3 pt-1 font-size-28\"><span className=\"font-italic app-text-accent\"></span>{data.name.split('.')[0]}</h1>\r\n            <div className=\"px-2\">\r\n                <ReactMarkdown source={atob(data.content)} />\r\n            </div>\r\n            </>\r\n        )\r\n    } else  if(error != null) {\r\n\r\n        toRender = (\r\n            <div className=\"font-ibm-plex-mono font-weight-500 px-2 py-2 app-text-gray-light\">\r\n                Failed to fetch article. Some Reasons can be:\r\n                <ul style={{listStylePosition: \"inside\"}}>\r\n                    <li>You have not sent pull request for this article.</li>\r\n                    <li>Your pull request is not yet merged.</li>\r\n                    <li>Article does not exists.</li>\r\n                    <li>Internet Problem. Check your internet connection.</li>\r\n                </ul> \r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">    \r\n            <Navigation />\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div style={{backgroundColor: \"#bdbdbd1f\"}} className=\"col-12 px-0 py-0 shadow-lg rounded-sm font-roboto-mono app-text-gray-light\">\r\n                        <div style={{backgroundColor: \"#bdbdbd0f\"}} className=\"app-text-main font-ibm-plex-mono font-weight-500 px-2 pb-1 pt-3\"><span className=\"font-italic app-text-indigo-light\">Written By- </span>{username}</div>\r\n                        {toRender}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}","import React from 'react'\r\nimport { Navigation } from './Navigation/Navigation'\r\nimport { Howto } from './HowTo'\r\n\r\n\r\nexport const HowToContainer = () => {\r\n    return  (\r\n        <div className=\"container-fluid app-bg-main\">\r\n            <Navigation />\r\n            <Howto />\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { SigninAttempt } from \"components/SignInAttempt/SiginAttempt\";\r\nimport { Home } from \"components/Home/Home\";\r\nimport { Content } from \"components/Content/Content\";\r\nimport { Explore } from 'components/Explore/Explore';\r\nimport { Letter } from 'components/Letter/Letter';\r\nimport { Howto } from 'components/HowTo';\r\nimport { HowToContainer } from 'components/HowToContainer';\r\n\r\nexport const routes = {\r\n    \"/user/signin/:username\": ({username}) => <SigninAttempt username={username} />,\r\n    \"/home\": () => <Home />,\r\n    \"/content\": () => <Content />,\r\n    \"/explore\": () => <Explore />,\r\n    \"/letter/:username/:lettername\": ({username, lettername}) => <Letter username={username} lettername={lettername} />,\r\n    \"/howto\": ()  => <HowToContainer />\r\n}\r\n\r\n","import React from 'react'\r\nimport {A} from 'hookrouter'\r\nimport 'components/NotFound/notfound.css'\r\nimport 'assets/css/theme.css'\r\n\r\nexport const NotFoundPage = () => {\r\n    \r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <h1 className=\"col-12 text-center app-text-accent font-space-mono py-md-5 py-3\">\r\n                    404 <br />\r\n                    Not Found\r\n                </h1>\r\n                <div className=\"col-12 text-center\">\r\n                    <A className='notfound-goHome' href=\"/home\">Go Home -</A>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) \r\n\r\n}","import React from 'react'\r\nimport 'assets/css/theme.css'\r\nimport 'components/Footer/footer.css'\r\nimport 'assets/fontawesome-free-5.11.2-web/css/all.min.css'\r\nimport {A} from 'hookrouter'\r\n\r\nconst socialLinks = ({link, linkicon}) => {\r\n    return <a className=\"text-decoration-none font-size-18 mx-1\"  href={link}><i className={linkicon}></i></a>\r\n}\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <div className=\"text-center py-4 font-ibm-plex-mono font-weight-500 app-bg-main app-text-indigo-light\">\r\n            Copyright &copy; FirstLetter. 2019\r\n            <div className=\"py-2\">\r\n                <a class=\"text-decoration-none app-text-bg-accent app-text-blue-light-hover\" href=\"https://vermakrtik.github.io\">Know About Developer </a> | <A href='/howto' className=\"text-decoration-none app-text-bg-accent app-text-blue-light-hover font-ibm-plex-mono\">Read How to.</A>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {userState} from 'react';\nimport logo from './logo.svg';\nimport './App.css'\nimport {useRoutes, useRedirect} from 'hookrouter'\nimport {useLoginContext} from 'context'\nimport { routes } from 'routes';\nimport { NotFoundPage } from 'components/NotFound/NotFoundPage';\nimport { Footer } from 'components/Footer/Footer';\n\nfunction App() {\n  useRedirect('/', '/home')\n  const routeResult = useRoutes(routes)\n  \n  return (\n  <div className=\"px-0 app-bg-main container-fluid h-100\">\n    {routeResult || <NotFoundPage />}\n    <Footer />\n  </div>)\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { useLoginContext } from 'context';\n\nReactDOM.render(\n    <useLoginContext.Provider>\n        <App />\n    </useLoginContext.Provider>, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {useReducer} from 'react'\r\nimport createUseContext from 'constate'\r\nconst ACTIONS = {\r\n    LOGIN: \"login\",\r\n    LOGOUT: \"logout\",\r\n    SET_USER_DETAILS: \"user_details\"\r\n}\r\n\r\nconst initialState = {\r\n    user: {\r\n        username: \"\",\r\n        authtoken: \"\", \r\n        useremail: \"\"\r\n    },\r\n    loggedIn: false,\r\n    error: null\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n\r\n    console.log(state)\r\n\r\n    switch(action.type) {\r\n        case ACTIONS.LOGIN:\r\n            return {\r\n                user: {\r\n                    ...state.user,\r\n                    username: action.user.github_username,\r\n                    authtoken: action.user.user_auth_token\r\n                },\r\n                loggedIn: true\r\n            }\r\n        case ACTIONS.LOGOUT: \r\n            return {\r\n                user: {\r\n                    ...state.user,\r\n                    username: \"\",\r\n                    authtoken: \"\"\r\n                },\r\n                loggedIn: false\r\n            }\r\n        case ACTIONS.SET_USER_DETAILS:\r\n            return {\r\n                user: {\r\n                    ...state.user,\r\n                    useremail: action.user.useremail\r\n                }\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n\r\n}\r\n\r\nconst useLogin = () => {\r\n    const [state, dispatch] = useReducer(reducer, initialState)\r\n    const {user, loggedIn} = state\r\n\r\n    const login = (user) => {\r\n        if(loggedIn === false) {\r\n            console.log(\"logging out..\")\r\n            dispatch({\r\n                type: ACTIONS.LOGIN,\r\n                user: user\r\n            })\r\n        }\r\n    } \r\n\r\n    const logout = () => {\r\n        if(loggedIn === true) {\r\n            console.log(\"logging out..\")\r\n            dispatch({\r\n                type: ACTIONS.LOGOUT\r\n            })\r\n        }\r\n    }\r\n\r\n    const setUserDetails = (user_details) => {\r\n        if(loggedIn == true) {\r\n            dispatch({\r\n                type: ACTIONS.SET_USER_DETAILS,\r\n                user: user_details\r\n            })\r\n        }\r\n    }\r\n\r\n    return {user, loggedIn, login, logout, setUserDetails}\r\n}\r\n\r\nexport const useLoginContext = createUseContext(useLogin)","module.exports = __webpack_public_path__ + \"static/media/Hacktoberfest_19.c173c8fb.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","export const RequestMethods = {\r\n    POST: 'post',\r\n    GET: \"get\",\r\n    PUT: \"put\"\r\n}\r\n\r\nexport const CONST_ERROR_NOT_FOUND = \"Not Found\"","import React from 'react'\r\nimport 'assets/css/theme.css'\r\nimport 'assets/fontawesome-free-5.11.2-web/css/all.min.css'\r\n\r\nexport const LoadingComponent = () => {\r\n    return <i className=\"app-text-blue-light fas fa-spinner fa-spin\"></i>\r\n}"],"sourceRoot":""}